name: Unified Monorepo Deploy

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.filter.outputs.app }}
      brief: ${{ steps.filter.outputs.brief }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
              - 'packages/forgeline-app/**'
            brief:
              - 'packages/forgeline-brief/**'

  build-and-deploy:
    needs: changes
    # [no-deploy] 태그가 없고, 변경된 파일이 있거나 수동 배포 태그가 있을 때 실행
    if: |
      !contains(github.event.head_commit.message, '[no-deploy]') &&
      (needs.changes.outputs.app == 'true' || needs.changes.outputs.brief == 'true' || contains(github.event.head_commit.message, '[deploy:'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: pnpm 설치
        uses: pnpm/action-setup@v3
        with: { version: 8 }

      - name: Node.js 설치
        uses: actions/setup-node@v4
        with: { node-version: '18', cache: 'pnpm' }

      - name: 의존성 설치
        run: pnpm install

      - name: 최종 배포물을 담을 staging 디렉터리 생성
        run: mkdir -p staging

      # forgeline-brief 빌드 및 복사
      - name: Build forgeline-brief
        if: needs.changes.outputs.brief == 'true' || contains(github.event.head_commit.message, '[deploy:brief')
        run: pnpm --filter forgeline-brief generate
      - name: Copy brief to staging
        if: needs.changes.outputs.brief == 'true' || contains(github.event.head_commit.message, '[deploy:brief')
        run: mkdir -p staging/forgeline-brief && cp -r packages/forgeline-brief/.output/public/* staging/forgeline-brief/

      # forgeline-app 빌드 및 복사 (SSG)
      # 현재는 gh-pages 배포만 고려하여 ssg로 빌드합니다.
      - name: Build forgeline-app (SSG)
        if: needs.changes.outputs.app == 'true' || contains(github.event.head_commit.message, '[deploy:app')
        run: pnpm --filter forgeline-app build:ssg
      - name: Copy app to staging
        if: needs.changes.outputs.app == 'true' || contains(github.event.head_commit.message, '[deploy:app')
        run: mkdir -p staging/forgeline-app && cp -r packages/forgeline-app/.output/public/* staging/forgeline-app/

      - name: 통합된 staging 디렉터리를 아티팩트로 업로드
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'staging'

      - name: GitHub Pages에 배포
        uses: actions/deploy-pages@v2
